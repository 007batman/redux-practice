{"ast":null,"code":"var _jsxFileName = \"/home/dml2022-user2/Desktop/crud (copy)/crud/src/components/Crud.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getUser, getUserData } from \"../redux/actions/Actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Crud = _ref => {\n  _s();\n\n  let {\n    apiData,\n    get\n  } = _ref;\n  useEffect(() => {\n    get(); // console.log(apiData)\n\n    localStorage.clear();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      class: \"table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"#\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"userName\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: apiData.map((id, index) => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: apiData[index].id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: apiData[index].name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: apiData[index].username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: apiData[index].email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Crud, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Crud;\n\nconst mapStateToProps = state => {\n  return {\n    apiData: state.data\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    get: () => dispatch(getUserData())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Crud);\n\nvar _c;\n\n$RefreshReg$(_c, \"Crud\");","map":{"version":3,"sources":["/home/dml2022-user2/Desktop/crud (copy)/crud/src/components/Crud.js"],"names":["React","useEffect","connect","getUser","getUserData","Crud","apiData","get","localStorage","clear","map","id","index","name","username","email","mapStateToProps","state","data","mapDispatchToProps","dispatch"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,EAAkBC,WAAlB,QAAqC,0BAArC;;;AAGA,MAAMC,IAAI,GAAG,QAAmB;AAAA;;AAAA,MAAlB;AAACC,IAAAA,OAAD;AAASC,IAAAA;AAAT,GAAkB;AAE5BN,EAAAA,SAAS,CAAC,MAAI;AACVM,IAAAA,GAAG,GADO,CAEV;;AACAC,IAAAA,YAAY,CAACC,KAAb;AACH,GAJQ,EAIP,EAJO,CAAT;AAKF,sBACE;AAAA,2BACA;AAAO,MAAA,KAAK,EAAC,OAAb;AAAA,8BACQ;AAAA,+BACE;AAAA,kCACE;AAAI,YAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAI,YAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAI,YAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE;AAAI,YAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADR,eASQ;AAAA,kBACPH,OAAO,CAACI,GAAR,CAAY,CAACC,EAAD,EAAIC,KAAJ,KAAY;AACrB,8BAEM;AAAA,oCACE;AAAA,wBAAKN,OAAO,CAACM,KAAD,CAAP,CAAeD;AAApB;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAA,wBAAKL,OAAO,CAACM,KAAD,CAAP,CAAeC;AAApB;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE;AAAA,wBAAKP,OAAO,CAACM,KAAD,CAAP,CAAeE;AAApB;AAAA;AAAA;AAAA;AAAA,oBAHF,eAIE;AAAA,wBAAKR,OAAO,CAACM,KAAD,CAAP,CAAeG;AAApB;AAAA;AAAA;AAAA;AAAA,oBAJF;AAAA,aAASH,KAAT;AAAA;AAAA;AAAA;AAAA,kBAFN;AAUH,SAXA;AADO;AAAA;AAAA;AAAA;AAAA,cATR;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADF;AA8BD,CArCD;;GAAMP,I;;KAAAA,I;;AAuCL,MAAMW,eAAe,GAAEC,KAAD,IAAS;AAC5B,SAAM;AACJX,IAAAA,OAAO,EAAEW,KAAK,CAACC;AADX,GAAN;AAGH,CAJA;;AAKD,MAAMC,kBAAkB,GAAIC,QAAD,IAAY;AACnC,SAAM;AACFb,IAAAA,GAAG,EAAG,MAAKa,QAAQ,CAAChB,WAAW,EAAZ;AADjB,GAAN;AAGH,CAJD;;AAOA,eAAgBF,OAAO,CAACc,eAAD,EAAiBG,kBAAjB,CAAP,CAA4Cd,IAA5C,CAAhB","sourcesContent":["import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getUser, getUserData } from \"../redux/actions/Actions\";\n\n\nconst Crud = ({apiData,get}) => {\n\n    useEffect(()=>{\n        get()\n        // console.log(apiData)\n        localStorage.clear()\n    },[])\n  return (\n    <div>\n    <table class=\"table\">\n            <thead>\n              <tr>\n                <th scope=\"col\">#</th>\n                <th scope=\"col\">name</th>\n                <th scope=\"col\">userName</th>\n                <th scope=\"col\">email</th>\n              </tr>\n            </thead>\n            <tbody>\n    {apiData.map((id,index)=>{\n        return(\n            \n              <tr key={index}>\n                <td>{apiData[index].id}</td>\n                <td>{apiData[index].name}</td>\n                <td>{apiData[index].username}</td>\n                <td>{apiData[index].email}</td>\n              </tr>\n            \n        )\n    })}\n\n    </tbody>\n          </table>\n     \n    </div>\n  );\n};\n\n const mapStateToProps=(state)=>{\n    return{\n      apiData: state.data,\n    };\n};\nconst mapDispatchToProps = (dispatch)=>{\n    return{\n        get : ()=> dispatch(getUserData())\n    };\n};\n\n\nexport default  connect(mapStateToProps,mapDispatchToProps)(Crud) ;\n"]},"metadata":{},"sourceType":"module"}